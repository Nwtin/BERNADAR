import telebot, requests, re, json

PRIVADO = [779455996,1625562699]
#
#
GRUPO = []
#
#
EXCEPT = []
#
#
ANONY = [] # OFF

bot = telebot.TeleBot("1915223072:AAEb2ZBNBVsj4iLr26NQGR1N0unqP1pag40")

@bot.message_handler(commands=['cnpj'])
def zn(nome):
            id1 = nome.chat.id

            ltnome = PRIVADO + GRUPO + ANONY + EXCEPT + [-1001414552721,-1001278553553,-1001588604830]
            if id1 in ltnome:
                try:
                    bot.reply_to(nome, '<code>consultando...</code>', parse_mode='HTML')
                    msg = nome.text
                    fl = msg.split('/cnpj')
                    ip = re.sub('[^0-9]', '', msg)
                    url = requests.get('https://www.receitaws.com.br/v1/cnpj/' + ip)
                    req = url.json()
                    response = f'üîç <b>CONSULTA DE CNPJ</b> üîç\n\n<b>‚Ä¢ CNPJ</b>: <code>{req["cnpj"]}</code>\n<b>‚Ä¢ MATRIZ</b>: <code>{req["tipo"]}</code>\n\n<b>‚Ä¢ ABERTURA</b>: <code>{req["abertura"]}</code>\n\n<b>‚Ä¢ NOME</b>: <code>{req["nome"]}</code>\n\n<b>‚Ä¢ NOME DA FANTASIA</b>: <code>{req["fantasia"]}</code>\n<b>‚Ä¢ PORTE</b>: <code>{req["porte"]}</code>\n\n<b>‚Ä¢ ATIVIDADE PRINCIPAL</b>: <code>{req["atividade_principal"]}</code>\n\n<b>‚Ä¢ ATIVIDADES SEGUNDARIAS</b>: <code>{req["atividades_secundarias"]}</code>\n\n<b>‚Ä¢ C√ìDIGO NATUREZA JUDICI√ÅRIAS</b>: <code>{req["natureza_juridica"]}</code>\n\n<b>‚Ä¢ QUEDRO DE S√ìCIOS E ADMINISTRADORES</b>: <code>{req["nome"]}</code>\n\n<b>‚Ä¢ LOGRADOURO</b>: <code>{req["logradouro"]}</code>\n<b>‚Ä¢ N√öMERO</b>: <code>{req["numero"]}</code>\n<b>‚Ä¢ COMPLEMENTO</b>: <code>{req["complemento"]}</code>\n\n<b>‚Ä¢ CEP</b>: <code>{req["cep"]}</code>\n<b>‚Ä¢ BAIRRO</b>: <code>{req["bairro"]}</code>\n<b>‚Ä¢ MUNIC√çPIO</b>: <code>{req["municipio"]}</code>\n<b>‚Ä¢ ESTADO</b>: <code>{req["uf"]}</code>\n\n<b>‚Ä¢ TELEFONE</b>: <code>{req["telefone"]}</code>\n<b>‚Ä¢ EMAIL</b>: <code>{req["email"]}</code>\n\n<b>‚Ä¢ By</b>: @Bernadar_robot'
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.reply_to(nome, response, parse_mode='HTML')

                except Exception as e:
                    print(e)
                    bot.reply_to(nome, '<b>CNPJ N√ÉO ENCONTRADO</b>', parse_mode='html')
            else:
                		bot.reply_to(nome, '''VOC√ä N√ÉO TEM AUTORIZA√á√ÉO



<a href='http://t.me/consultassss'>grupo</a>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ''', parse_mode='html')

@bot.message_handler(commands=['cnpj'])
def zn(nome):
            id1 = nome.chat.id

            ltnome = PRIVADO + GRUPO + ANONY + EXCEPT + [-1001414552721,-1001278553553,-1001588604830]
            if id1 in ltnome:
                try:
                    bot.reply_to(nome, '<code>consultando...</code>', parse_mode='HTML')
                    msg = nome.text
                    fl = msg.split('/cnpj')
                    ip = re.sub('[^0-9]', '', msg)
                    url = requests.get('https://www.receitaws.com.br/v1/cnpj/' + ip)
                    req = url.json()
                    response = f'üîç <b>CONSULTA DE CNPJ</b> üîç\n\n<b>‚Ä¢ CNPJ</b>: <code>{req["cnpj"]}</code>\n<b>‚Ä¢ MATRIZ</b>: <code>{req["tipo"]}</code>\n\n<b>‚Ä¢ ABERTURA</b>: <code>{req["abertura"]}</code>\n\n<b>‚Ä¢ NOME</b>: <code>{req["nome"]}</code>\n\n<b>‚Ä¢ NOME DA FANTASIA</b>: <code>{req["fantasia"]}</code>\n<b>‚Ä¢ PORTE</b>: <code>{req["porte"]}</code>\n\n<b>‚Ä¢ ATIVIDADE PRINCIPAL</b>: <code>{req["atividade_principal"]}</code>\n\n<b>‚Ä¢ ATIVIDADES SEGUNDARIAS</b>: <code>{req["atividades_secundarias"]}</code>\n\n<b>‚Ä¢ C√ìDIGO NATUREZA JUDICI√ÅRIAS</b>: <code>{req["natureza_juridica"]}</code>\n\n<b>‚Ä¢ QUEDRO DE S√ìCIOS E ADMINISTRADORES</b>: <code>{req["nome"]}</code>\n\n<b>‚Ä¢ LOGRADOURO</b>: <code>{req["logradouro"]}</code>\n<b>‚Ä¢ N√öMERO</b>: <code>{req["numero"]}</code>\n<b>‚Ä¢ COMPLEMENTO</b>: <code>{req["complemento"]}</code>\n\n<b>‚Ä¢ CEP</b>: <code>{req["cep"]}</code>\n<b>‚Ä¢ BAIRRO</b>: <code>{req["bairro"]}</code>\n<b>‚Ä¢ MUNIC√çPIO</b>: <code>{req["municipio"]}</code>\n<b>‚Ä¢ ESTADO</b>: <code>{req["uf"]}</code>\n\n<b>‚Ä¢ TELEFONE</b>: <code>{req["telefone"]}</code>\n<b>‚Ä¢ EMAIL</b>: <code>{req["email"]}</code>\n\n<b>‚Ä¢ By</b>: @Bernadar_robot'
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.reply_to(nome, response, parse_mode='HTML')

                except Exception as e:
                    print(e)
                    bot.reply_to(nome, '<b>CNPJ N√ÉO ENCONTRADO</b>', parse_mode='html')
            else:
                		bot.reply_to(nome, '''VOC√ä N√ÉO TEM AUTORIZA√á√ÉO



<a href='http://t.me/consultassss'>grupo</a>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ''', parse_mode='html')

@bot.message_handler(commands=['menu', 'help', 'start'])
def bniio(men):
    notbin = []
    bid = men.chat.id
    mensagem = men.text
    if men.text == '/menuu':
        bot.reply_to(men, '<b>' + '‚ö† ERRADO BURRO ‚ö†' + '</b>')
    else:
        try:
        	menu = f'ol√°, <pre>{men.from_user.first_name}</pre>\n<b>VEJA MEUS COMANDOS</b>\n\n<b>üîçMENU DO BOTüîç</b>\n\n<b>üëæ CPF</b>: <code>/cpf1 34592913892</code>\n<b>üëæ CNPJ</b>: <code>/cnpj 27865757000102</code>\n<b>üëæ BIN</b>: <code>/bin 545323</code>\n<b>üëæ VIZINHOS</b>: <code>/vizinhos 27867260854</code>\n<b>üëæ PLACA</b>: <code>/placa ATJ8617</code>\n\n<b>‚Ä¢ USER DO BOTü§ñ</b>: @Bernadar_robot'
        	bot.reply_to(men, menu, parse_mode='HTML')
        except:
                    bot.reply_to(men, 'start',)
                    
@bot.message_handler(commands=['vizinhos'])
def byti(men):
            chtid = men.chat.id
            permitidos = PRIVADO + GRUPO + EXCEPT + ANONY + [-1001414552721,-1001278553553,-1001588604830]
            if int(chtid) in permitidos:
                if men.text == '/vizinhos':
                    bot.reply_to(men, 'VIZINHOS Checker - Consulta de VIZINHOS, obt√©m os nomes dos vizinhos do portador do n√∫mero de CPF.' + '\n\n' + 'Formato' + '\n' + '27867260854' + '\n' + 'ou' + '\n' + '278.672.608-54' + '\n\n' + '/vizinhos 27867260854')

                else:
                    header = {'Host': 'tudosobretodos.info', 'cache-control': 'max-age=0',
                              'upgrade-insecure-requests': '1', 'save-data': 'on',
                              'user-agent': 'Mozilla/5.0 (Linux; Android 10; SM-A107M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.111 Mobile Safari/537.36',
                              'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
                              'sec-fetch-site': 'cross-site', 'sec-fetch-mode': 'navigate',
                              'sec-fetch-user': '?1',
                              'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br',
                              'accept-language': 'pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7',
                              'cookie': '__cfduid=dc3ac236c5f39888dbd7f585eedf6feb11596724421',
                              'cookie': '_ga=GA1.2.971515152.1596724424',
                              'cookie': '_gid=GA1.2.109978583.1596724424'}
                    num = re.sub('[^0-9]', '', men.text)
                    envia = requests.get("https://tudosobretodos.info/{}".format(num), headers=header).text

                    if "itemMoradores" in envia:
                        try:
                            bot.reply_to(men, '<code>consultando...</code>', parse_mode='html')

                            viz1 = str(envia.split("<div class='itemMoradores'>")[1].split("<")[0][3:40]) + '\n' + \
                                   str(envia.split("<div class='itemMoradores'>")[2].split("<")[0][3:40]) + '\n' + \
                                   str(envia.split("<div class='itemMoradores'>")[3].split("<")[0][3:40]) + '\n' + str(envia.split("<div class='itemMoradores'>")[4].split("<")[0][3:40]) +'\n'+ \
                                   str(envia.split("<div class='itemMoradores'>")[5].split("<")[0][3:40])

                            bot.reply_to(men, '<b>' 'üîçCONSULTA DE VIZINHOS üîç' '</b>' + '\n\n' + '<b>' '‚Ä¢ VIZINHOS: ' '</b>' + '\n\n' + '<code>' + viz1 + '</code>' + '\n\n' + '<b>' '‚Ä¢ By: @Bernadar_robot' '</b>' , parse_mode='html')
                        except:
                            try:
                                viz1 = str(envia.split("<div class='itemMoradores'>")[1].split("<")[0][3:40]) + '\n' + \
                                       str(envia.split("<div class='itemMoradores'>")[2].split("<")[0][3:40])

                                bot.reply_to(men,
                                             '<b>' 'üîçCONSULTA DE VIZINHOS üîç' '</b>' + '\n\n' + '<b>' '‚Ä¢ VIZINHOS: ' '</b>' + '\n\n' + '<code>' + viz1 + '</code>' + '\n\n' + '<b>' '‚Ä¢ By: @Bernadar_robot' '</b>',
                                             parse_mode='html')
                            except:
                                bot.reply_to(men, '<b>‚ö†Ô∏èVIZINHOS N√ÉO ENCONTRADO!‚ö†Ô∏è</b>', parse_mode='HTML')



                    else:
                        bot.reply_to(men, '<b>‚ö†Ô∏èVIZINHOS N√ÉO ENCONTRADO!‚ö†Ô∏è</b>Ô∏è', parse_mode='html')

            else:
                bot.reply_to(men, '''VOC√ä N√ÉO TEM AUTORIZA√á√ÉO


<a href='http://t.me/consultassss'>grupo</a>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ''', parse_mode='html')




@bot.message_handler(commands=['cpf1','!cpf'])
def zn(nome):
            id1 = nome.chat.id

            ltnome = PRIVADO + GRUPO + ANONY + EXCEPT + [-1001414552721,-1001278553553,-1001588604830]
            if id1 in ltnome:
                try:
                    bot.reply_to(nome, '<code>consultando...</code>', parse_mode='HTML')
                    msg = nome.text.replace('cpf1','')
                    ip = re.sub('[^0-9]', '', msg)
                    url = requests.get('https://netinmakerapi.000webhostapp.com/netinadmf/CONSULTA%20CPF1/api.php?cpf=' + ip)
                    req = url.json()
                    response = f'üîç <b>CONSULTA DE CPF</b> üîç\n\n<b>‚Ä¢ CPF</b>: <code>{req["retorno"]["CPF"]}</code>\n<b>‚Ä¢ NOME</b>: <code>{req["retorno"]["Nome"]}</code>\n\n<b>‚Ä¢ SEXO</b>: <code>{req["retorno"]["Sexo"]}</code>\n\n<b>‚Ä¢ NASCIMENTO</b>: <code>{req["retorno"]["AnoNascimento"]}</code>\n\n<b>‚Ä¢ By</b>: @Bernadar_robot'
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.send_chat_action(nome.chat.id, 'typing')
                    bot.reply_to(nome, response, parse_mode='HTML')

                except Exception as e:
                    print(e)
                    bot.reply_to(nome, '<b>CPF N√ÉO ENCONTRADO</b>', parse_mode='html')
            else:
                		bot.reply_to(nome, '''VOC√ä N√ÉO TEM AUTORIZA√á√ÉO



<a href='http://t.me/consultassss'>grupo</a>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ''', parse_mode='html')



@bot.message_handler(commands=['placafull'])
def placa(message):
    placa = message.text.replace('/placafull ','')
    r = requests.get('https://apicarros.com/v2/consultas/{placa}/f63e1e63dd231083d38ce929984aac7d', verify=False)

    r = r.json()

    placa = r['placa']
    situacao = r['situacao']
    marca = r['marca']
    cor = r['cor']
    anofa = r['ano']
    ano = r['anoModelo']
    modelo = r['modelo']
    municipio = r ['municipio']
    estado = r['uf']
    e = r["extra"]['chassi']
    ee = r["extra"]['renavam']
    fatu = r["extra"]['faturado']
    se = r["extra"]['marca_modelo']['segmento']
    sb = r["extra"]['marca_modelo']['sub_segmento']
    grupo = r["extra"]['marca_modelo']['grupo']
    combustivel = r["extra"]['combustivel']['combustivel']
    potencia = r['extra']['potencia']
    capa = r['extra']['capacidade_carga']
    nac = r['extra']['nacionalidade']['nacionalidade']
    linha = r['extra']['linha']
    caro = r['extra']['carroceria']
    moto = r['extra']['motor']
    pessoa = r['extra']['tipo_doc_faturado']['tipo_pessoa']
    veiculotipo = r['extra']['tipo_veiculo']['tipo_veiculo']
    passa = r['extra']['quantidade_passageiro']
    ide = r['extra']['ident_importadora']
    di = r['extra']['di']
    regis = r['extra']['registro_di']
    uni = r['extra']['unidade_local_srf']
    att = r['extra']['ultima_atualizacao']
    an = r['extra']['placa_modelo_antigo']
    at = r['extra']['placa_modelo_novo']
    return f'''
üîç ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùó£ùóüùóîùóñùóî üîç

‚Ä¢ PLACA: {placa}
‚Ä¢ SITUA√á√ÉO: {situacao}

‚Ä¢ MARCA: {marca}
‚Ä¢ MODELO: {modelo}
‚Ä¢ COR: {cor}

‚Ä¢ ANO - FAB.: {anofa}
‚Ä¢ ANO - MODELO: {ano}

‚Ä¢ MUNICIPIO: {municipio}
‚Ä¢ ESTADO: {estado}

‚Ä¢ CHASSI: {e}
‚Ä¢ RENAVAM: {ee}

‚Ä¢ FATURADO: {fatu}
‚Ä¢ UF - FATURADO: {estado}

‚Ä¢ SEGMENTO: {se}
‚Ä¢ SUB SEGMENTO: {sb}
‚Ä¢ GRUPO: {grupo}

‚Ä¢ COMBUSTIVEL: {combustivel}
‚Ä¢ POTENCIA: {potencia}

‚Ä¢ CAPACIDADE DE CARGA: {capa}
‚Ä¢ NACIONALIDADE: {nac}
‚Ä¢ LINHA: {linha}

‚Ä¢ CARROCERIA: {caro}
‚Ä¢ EIXO TRASEIRO: SEM INFORMA√á√ÉO
‚Ä¢ MOTOR: {moto}

‚Ä¢ TIPO DE PESSOA: {pessoa}
‚Ä¢ TIPO DE VEICULO: {veiculotipo}
‚Ä¢ QUANTIDADE DE PASSAGEIROS: {passa}

‚Ä¢ ID IMPORTADORA: {ide}
‚Ä¢ DI: {di}
‚Ä¢ REGISTRO DI: {regis}
‚Ä¢ UNIDADE LOCAL SRF: {uni}

‚Ä¢ ULTIMA ATUALIZA√á√ÉO: {att}

‚Ä¢ PLACA MODELO ANTIGO: {an}
‚Ä¢ PLACA MODELO NOVO: {at}


üîõ BY: @bernadar_robot'''   	

bot.polling()




@bot.message_handler(commands=['placa','placa3','veiculo','placa4'])
def zbsn(nome):
            id1 = nome.chat.id

            ltnome = PRIVADO + GRUPO + EXCEPT + ANONY + [-1001414552721,-1001278553553,-1001588604830]
            if id1 in ltnome:
                try:
                    msg = nome.text
                    fl = msg.split('/placa')
                    ipp = re.sub('[^A-Z]', '', msg)
                    ip = re.sub('[^0-9]', '', msg)
                    url = requests.get("https://apicarros.com/v1/consulta/" + ipp + ip + "/json", verify=False)
                    req = url.json()
                    response = f'üîç<b>PLACA ENCONTRADA</b>üîç\n\n<b>‚Ä¢ PLACA</b>: <code>{req["placa"]}</code>\n<b>‚Ä¢ ANO</b>: <code>{req["ano"]}</code>\n<b>‚Ä¢ CHASSI</b>: <code>{req["chassi"]}</code>\n<b>‚Ä¢ COR</b>: <code>{req["cor"]}</code>\n<b>‚Ä¢ DATA</b>: <code>{req["data"]}</code>\n<b>‚Ä¢ ALERME</b>: <code>{req["dataAtualizacaoAlarme"]}</code>\n<b>‚Ä¢ VEICULO</b>: <code>{req["dataAtualizacaoCaracteristicasVeiculo"]}</code>\n<b>‚Ä¢ ROUBO/FURTO</b>: <code>{req["dataAtualizacaoRouboFurto"]}</code>\n<b>‚Ä¢ MARCA</b>: <code>{req["marca"]}</code>\n<b>‚Ä¢ MODELO</b>: <code>{req["modelo"]}</code>\n<b>‚Ä¢ MUNIC√çPIO</b>: <code>{req["municipio"]}</code>\n<b>‚Ä¢ UF</b>: <code>{req["uf"]}</code>\n<b>‚Ä¢ SITUA√á√ÉO</b>: <code>{req["situacao"]}</code>\n\n<b>‚Ä¢ By</b>: @Bernadar_robot'
                    bot.reply_to(nome, response, parse_mode="html")
                except:
                	bot.reply_to(nome, '<b>PLACA N√ÉO FOI ENCONTRADA</b>', parse_mode='html')
            else:
                		bot.reply_to(nome, '''VOC√ä N√ÉO TEM AUTORIZA√á√ÉO

<a href='http://t.me/consultassss'>grupo</a>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ''', parse_mode='html')   		
bot.polling()
